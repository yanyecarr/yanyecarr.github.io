<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yanyecarr.github.io/</id>
    <title>carr</title>
    <updated>2020-04-04T13:50:05.912Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yanyecarr.github.io/"/>
    <link rel="self" href="https://yanyecarr.github.io//atom.xml"/>
    <subtitle>欲买桂花同载酒，终不似，少年游</subtitle>
    <logo>https://yanyecarr.github.io//images/avatar.png</logo>
    <icon>https://yanyecarr.github.io//favicon.ico</icon>
    <rights>All rights reserved 2020, carr</rights>
    <entry>
        <title type="html"><![CDATA[03-HTML常用标签]]></title>
        <id>https://yanyecarr.github.io//post/03-html-chang-yong-biao-qian</id>
        <link href="https://yanyecarr.github.io//post/03-html-chang-yong-biao-qian">
        </link>
        <updated>2020-04-04T11:22:36.000Z</updated>
        <content type="html"><![CDATA[<h2 id="学习目标">学习目标</h2>
<ul>
<li>理解：
<ul>
<li>相对路径三种形式</li>
</ul>
</li>
<li>应用
<ul>
<li>排版标签</li>
<li>文本格式化标签</li>
<li>图像标签</li>
<li>链接</li>
<li>相对路径，绝对路径的使用</li>
</ul>
</li>
</ul>
<h1 id="1-html常用标签">1. HTML常用标签</h1>
<p>首先 HTML和CSS是两种完全不同的语言，我们学的是结构，就只写HTML标签，认识标签就可以了。 不会再给结构标签指定样式了。</p>
<p>HTML标签有很多，这里我们学习最为常用的，后面有些较少用的，我们可以查下手册就可以了。</p>
<h2 id="11-排版标签">1.1 排版标签</h2>
<p>排版标签主要和css搭配使用，显示网页结构的标签，是网页布局最常用的标签。</p>
<h3 id="1标题标签h-熟记">1）标题标签h (熟记)</h3>
<p>单词缩写：  head   头部. 标题       title  文档标题</p>
<p>为了使网页更具有语义化，我们经常会在页面中用到标题标签，HTML提供了6个等级的标题，即</p>
<p><strong>标题标签语义：</strong>  作为标题使用，并且依据重要性递减</p>
<p>其基本语法格式如下：</p>
<pre><code class="language-html">&lt;h1&gt;   标题文本   &lt;/h1&gt;
&lt;h2&gt;   标题文本   &lt;/h2&gt;
&lt;h3&gt;   标题文本   &lt;/h3&gt;
&lt;h4&gt;   标题文本   &lt;/h4&gt;
&lt;h5&gt;   标题文本   &lt;/h5&gt;
&lt;h6&gt;   标题文本   &lt;/h6&gt;
</code></pre>
<p>显示效果如下：</p>
  <img src="media/h.png" />
<p><strong>小结 :</strong></p>
<ul>
<li>加了标题的文字会变的加粗，字号也会依次变大</li>
<li>一行是只能放一个标题的</li>
</ul>
<pre><code>     传智播客学前端，
　　 前端入门亦简单。
　　 简单知识简单看，
　　 重点勤练写三遍。
　　 标题一共六级选，
　　 具体效果刷新见。
　　        ------pink老师
</code></pre>
<h3 id="2段落标签p-熟记">2）段落标签p ( 熟记)</h3>
<p>单词缩写：  paragraph  段落  [ˈpærəgræf]    无须记这个单词</p>
<p><strong>作用语义：</strong></p>
<p>可以把 HTML 文档分割为若干段落</p>
<p>在网页中要把文字有条理地显示出来，离不开段落标签，就如同我们平常写文章一样，整个网页也可以分为若干个段落，而段落的标签就是</p>
<pre><code class="language-html">&lt;p&gt;  文本内容  &lt;/p&gt;
</code></pre>
<p>是HTML文档中最常见的标签，默认情况下，文本在一个段落中会根据浏览器窗口的大小自动换行。</p>
<h3 id="3水平线标签hr认识">3）水平线标签hr(认识)</h3>
<p>单词缩写：  horizontal  横线    [ˌhɔrəˈzɑntl]    同上</p>
<p>在网页中常常看到一些水平线将段落与段落之间隔开，使得文档结构清晰，层次分明。这些水平线可以通过插入图片实现，也可以简单地通过标签来完成，<hr />就是创建横跨网页水平线的标签。其基本语法格式如下：</p>
<pre><code class="language-html">&lt;hr /&gt;是单标签
</code></pre>
<p>在网页中显示默认样式的水平线。</p>
<p>课堂练习:新闻页面</p>
<img src="media/sh.png" /> 
<h3 id="4换行标签br-熟记">4）换行标签br (熟记)</h3>
<p>单词缩写：  break   打断 ,换行</p>
<p>在HTML中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后自动换行。如果希望某段文本强制换行显示，就需要使用换行标签</p>
<pre><code class="language-html">&lt;br /&gt;
</code></pre>
<p>这时如果还像在word中直接敲回车键换行就不起作用了。</p>
<p>此处有练习题</p>
<h3 id="5div-和-span标签重点">5）div 和  span标签(重点)</h3>
<p>div   span    是没有语义的     是我们网页布局主要的2个盒子   想必你听过  css+div</p>
<p>div 就是  division  的缩写   分割， 分区的意思  其实有很多div 来组合网页。</p>
<p>span   跨度，跨距；范围</p>
<p>语法格式：</p>
<pre><code class="language-html">&lt;div&gt; 这是头部 &lt;/div&gt;    &lt;span&gt;今日价格&lt;/span&gt;
</code></pre>
<p>他们两个都是盒子，用来装我们网页元素的， 只不过他们有区别，现在我们主要记住使用方法和特点就好了</p>
<ul>
<li>div标签  用来布局的，但是现在一行只能放一个div</li>
<li>span标签  用来布局的，一行上可以放好多个span</li>
</ul>
<p>后面后面讲显示模式的时候，会告诉大家</p>
<h3 id="排版标签总结">排版标签总结</h3>
<table>
<thead>
<tr>
<th>标签名</th>
<th style="text-align:left">定义</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><hx></hx></td>
<td style="text-align:left">标题标签</td>
<td style="text-align:left">作为标题使用，并且依据重要性递减</td>
</tr>
<tr>
<td><p></p></td>
<td style="text-align:left">段落标签</td>
<td style="text-align:left">可以把 HTML 文档分割为若干段落</td>
</tr>
<tr>
<td><hr /></td>
<td style="text-align:left">水平线标签</td>
<td style="text-align:left">没啥可说的，就是一条线</td>
</tr>
<tr>
<td><br /></td>
<td style="text-align:left">换行标签</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td><div></div></td>
<td style="text-align:left">div标签</td>
<td style="text-align:left">用来布局的，但是现在一行只能放一个div</td>
</tr>
<tr>
<td><span></span></td>
<td style="text-align:left">span标签</td>
<td style="text-align:left">用来布局的，一行上可以放好多个span</td>
</tr>
</tbody>
</table>
<h2 id="12-文本格式化标签熟记">1.2 文本格式化标签(熟记)</h2>
<p>在网页中，有时需要为文字设置粗体、斜体或下划线效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。</p>
<img src="media/tab.png" />
<p><strong>区别：</strong></p>
<p>b  只是加粗          strong  除了可以加粗还有 强调的意思，  语义更强烈。</p>
<p>剩下的同理...</p>
<blockquote>
<p>请同学们重点记住 前两组   加粗 和 倾斜   后面两组没记住回来查</p>
</blockquote>
<h2 id="13-标签属性">1.3 标签属性</h2>
 <img src="media/ttt.jpg" width="300"  />
<p>所谓属性就是<strong>外在特性</strong>  比如 手机的颜色 手机的尺寸 ，总结就是手机的。。</p>
<ul>
<li>手机的颜色是黑色</li>
<li>手机的尺寸是 8寸</li>
<li>水平线的长度是 200</li>
<li>图片的宽度 是  300</li>
</ul>
<p>使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。其基本语法格式如下：</p>
<pre><code class="language-html">&lt;标签名 属性1=&quot;属性值1&quot; 属性2=&quot;属性值2&quot; …&gt; 内容 &lt;/标签名&gt;
&lt;手机 颜色=&quot;红色&quot; 大小=&quot;5寸&quot;&gt;  &lt;/手机&gt;
</code></pre>
<h2 id="14-图像标签img-重点">1.4 图像标签img (重点)</h2>
<p>单词缩写：   image  图像</p>
<p>要想在网页中显示图像就需要使用图像标签，接下来将详细介绍图像标签<img />以及和他相关的属性。（它是一个单身狗）</p>
<p>语法如下：</p>
<pre><code class="language-html">&lt;img src=&quot;图像URL&quot; /&gt;
</code></pre>
<p>该语法中src属性用于指定图像文件的路径和文件名，他是img标签的必需属性。</p>
<img src="media/img.png" />
<p>border 后面我们会用css来做，这里童鞋们就记住这个border 单词就好了</p>
<p>**注意: **</p>
<ol>
<li>标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。</li>
<li>属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</li>
<li>采取  键值对 的格式   key=&quot;value&quot;  的格式</li>
</ol>
<p>比如:</p>
<pre><code class="language-html">	正常的&lt;br /&gt;
    &lt;img src=&quot;cz.jpg&quot; width=&quot;300&quot; height=&quot;300&quot; /&gt;&lt;br /&gt;
     带有边框的&lt;br /&gt;
    &lt;img src=&quot;cz.jpg&quot; width=&quot;300&quot; height=&quot;300&quot; border=&quot;3&quot; /&gt;&lt;br /&gt;
	有提示文本的&lt;br /&gt;
	&lt;img src=&quot;cz.jpg&quot; width=&quot;300&quot; height=&quot;300&quot; border=&quot;3&quot; title=&quot;这是个小蒲公英&quot; /&gt;&lt;br /&gt;
	有替换文本的&lt;br /&gt;
	&lt;img src=&quot;cz.jpg&quot; width=&quot;300&quot; height=&quot;300&quot; border=&quot;3&quot; alt=&quot;图片不存在&quot; /&gt;
</code></pre>
<p>此处有练习题</p>
<p><strong>重点掌握点：</strong></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4550431"><label class="task-list-item-label" for="task-item-4550431"> 请说出 图像标签那个属性是必须要写的？</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3322294"><label class="task-list-item-label" for="task-item-3322294"> 请说出 图像标签中 alt 和  title 属性区别？</label></li>
</ul>
<h2 id="15-链接标签重点">1.5 链接标签(重点)</h2>
<p>单词缩写：  anchor 的缩写  [ˈæŋkə(r)] 。基本解释 锚, 铁锚 的</p>
<p>在HTML中创建超链接非常简单，只需用标签把文字包括起来就好。</p>
<p>语法格式：</p>
<pre><code class="language-html">&lt;a href=&quot;跳转目标&quot; target=&quot;目标窗口的弹出方式&quot;&gt;文本或图像&lt;/a&gt;
</code></pre>
<table>
<thead>
<tr>
<th>属性</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>href</td>
<td style="text-align:left">用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能</td>
</tr>
<tr>
<td>target</td>
<td style="text-align:left">用于指定链接页面的打开方式，其取值有_self和_blank两种，其中_self为默认值，__blank为在新窗口中打开方式。</td>
</tr>
</tbody>
</table>
<p><strong>注意：</strong></p>
<ol>
<li>外部链接 需要添加 http:// www.baidu.com</li>
<li>内部链接 直接链接内部页面名称即可 比如 &lt; a href=&quot;index.html&quot;&gt; 首页 </a ></li>
<li>如果当时没有确定链接目标时，通常将链接标签的href属性值定义为“#”(即href=&quot;#&quot;)，表示该链接暂时为一个空链接。</li>
<li>不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。</li>
</ol>
<p><strong>重点掌握点：</strong></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1504050"><label class="task-list-item-label" for="task-item-1504050"> 请说出 链接标签那个属性是必须要写的？</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3129697"><label class="task-list-item-label" for="task-item-3129697"> 请说出 如何新窗口打开这个一个链接网页的？</label></li>
</ul>
<h2 id="16-注释标签">1.6 注释标签</h2>
<p>在HTML中还有一种特殊的标签——注释标签。如果需要在HTML文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。</p>
<p>简单解释：</p>
<p>注释内容不会显示在浏览器窗口中，但是作为HTML文档内容的一部分，也会被下载到用户的计算机上，查看源代码时就可以看到。</p>
<p>语法格式：</p>
<pre><code class="language-html">    &lt;!-- 注释语句 --&gt;     快捷键是：    ctrl + /       或者 ctrl +shift + / 
</code></pre>
<p>注释重要性：</p>
<img src="media/zs.png" />
<p>** 一句话说出他们:**</p>
<blockquote>
<p>注释是给人看的，目的是为了更好的解释这部分代码是干啥的， 程序是不执行这个代码的</p>
</blockquote>
<h3 id="团队约定">团队约定</h3>
<p>一般用于简单的描述，如某些状态描述、属性描述等</p>
<p>注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行</p>
<p><em>推荐：</em></p>
<pre><code>&lt;!-- Comment Text --&gt;
&lt;div&gt;...&lt;/div&gt;
</code></pre>
<p><em>不推荐：</em></p>
<pre><code>&lt;div&gt;...&lt;/div&gt;&lt;!-- Comment Text --&gt;	
	
&lt;div&gt;&lt;!-- Comment Text --&gt;
    ...
&lt;/div&gt;
</code></pre>
<h1 id="2-路径重点-难点">2. 路径(重点、难点)</h1>
<img src="media/dt.png" width="400" />
<p>实际工作中，我们的文件不能随便乱放，否则用起来很难快速的找到他们，因此我们需要一个文件夹来管理他们。</p>
<p>**目录文件夹： **</p>
<p>就是普通文件夹，里面只不过存放了我们做页面所需要的 相关素材，比如 html文件， 图片 等等。</p>
 <img src="media/g.png" />
<p>**根目录 **</p>
<p>打开目录文件夹的第一层  就是 根目录</p>
 <img src="media/gg.png" />
<p>页面中的图片会非常多， 通常我们再新建一个文件夹专门用于存放图像文件（images），这时再插入图像，就需要采用“路径”的方式来指定图像文件的位置。路径可以分为： 相对路径和绝对路径</p>
<h2 id="相对路径">相对路径</h2>
<p>以引用文件之网页所在位置为参考基础，而建立出的目录路径。因此，当保存于不同目录的网页引用同一个文件时，所使用的路径将不相同，故称之为相对路径。</p>
<table>
<thead>
<tr>
<th>路径分类</th>
<th style="text-align:center">符号</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>同一级路径</td>
<td style="text-align:center"></td>
<td style="text-align:left">只需输入图像文件的名称即可，如&lt;img src=&quot;baidu.gif&quot; /&gt;。<img src='./media/04路径同目录.jpg'></td>
</tr>
<tr>
<td>下一级路径</td>
<td style="text-align:center">“/”</td>
<td style="text-align:left">图像文件位于HTML文件同级文件夹下（例如文件夹名称为：images）                         如&lt;img src=&quot;images/baidu.gif&quot; /&gt;。  <img  src='./media/05路径不同.jpg'/></td>
</tr>
<tr>
<td>上一级路径</td>
<td style="text-align:center">“../”</td>
<td style="text-align:left">在文件名之前加入“../” ，如果是上两级，则需要使用 “../ ../”，以此类推，                    如&lt;img src=&quot;../baidu.gif&quot; /&gt;。 <img  src='./media/06路径不同.jpg'/></td>
</tr>
</tbody>
</table>
<p>** 一句话说出他们: **</p>
<blockquote>
<p>相对路径，是从代码所在的这个文件出发， 去寻找我们的目标文件的，而 我们所说的 上一级 下一级 同一级  简单说，就是 图片 位于 HTML 页面的位置</p>
</blockquote>
<h2 id="绝对路径">绝对路径</h2>
<p>绝对路径以Web站点根目录为参考基础的目录路径。之所以称为绝对，意指当所有网页引用同一个文件时，所使用的路径都是一样的。</p>
<p>“D:\web\img\logo.gif”，或完整的网络地址，例如“http://www.itcast.cn/images/logo.gif”。</p>
<p><strong>注意：</strong></p>
<p>绝对路径用的较少，我们理解下就可以了。  但是要注意，它的写法 特别是符号  \  并不是 相对路径的   /</p>
<h1 id="3-今日总结">3. 今日总结</h1>
<p>每一天都有一个主题 我们HTML第一天的主题就是 &lt;认识标签&gt;  能用常用标签，写出最简单的页面</p>
<p>学HTML 之前 觉得 很神秘</p>
 <img src="media/z.png" />
<p>等你学完之后忽然发现</p>
 <img src="media/rh.jpg" width="615" />
<p>总结今天的思路贯穿线：</p>
<img src="media/a.png" width="1000" />
<h1 id="4-综合案例-圣诞">4. 综合案例：  圣诞</h1>
<h1 id="5-拓展阅读">5. @拓展阅读</h1>
<h4 id="51-锚点定位-难点">5.1 锚点定位 （难点）</h4>
<p>通过创建锚点链接，用户能够快速定位到目标内容。</p>
<p>创建锚点链接分为两步：</p>
<pre><code class="language-html">1. 使用相应的id名标注跳转目标的位置。 (找目标)
  &lt;h3 id=&quot;two&quot;&gt;第2集&lt;/h3&gt; 

2. 使用&lt;a href=&quot;#id名&quot;&gt;链接文本&lt;/a&gt;创建链接文本（被点击的） （拉关系）  我也有一个姓毕的姥爷..
  &lt;a href=&quot;#two&quot;&gt;   
</code></pre>
 <img src="C:/Users/itcast/Desktop/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80HTML%E7%AC%AC%E4%B8%80%E5%A4%A9/%E7%AC%94%E8%AE%B0/media/03a%E7%9B%AE%E6%A0%87.jpg">
<p>快速记忆法：</p>
<p>好比找个人办事，  首先找到他，然后拉关系，最后看效果。</p>
<h4 id="52-base-标签">5.2 base 标签</h4>
<p><strong>语法：</strong></p>
<pre><code class="language-html">&lt;base target=&quot;_blank&quot; /&gt;
</code></pre>
<img src="C:/Users/itcast/Desktop/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80HTML%E7%AC%AC%E4%B8%80%E5%A4%A9/%E7%AC%94%E8%AE%B0/media/base.png" />
<p>**总结： **</p>
<ol>
<li>base 可以设置整体链接的打开状态</li>
<li>base 写到  <head>  </head>  之间</li>
<li>把所有的连接 都默认添加 target=&quot;_blank&quot;</li>
</ol>
<p>** 一句话说出他们:**</p>
<blockquote>
<p>全体链接~ 到 ~  全体集合  所有链接 以新窗口打开页面  ~   是</p>
</blockquote>
<h4 id="53-预格式化文本pre标签">5.3 预格式化文本pre标签</h4>
<pre> 标签可定义预格式化的文本。

被包围在 <pre> 标签 元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。

```html
<pre>

  此例演示如何使用 pre 标签

  对空行和 空格

  进行控制

</pre>
<pre><code>
** 一句话说出他们:**

&gt; 所谓的预格式化文本就是 ，按照我们预先写好的文字格式来显示页面， 保留空格和换行等。 

有了这个标签，里面的文字，会按照我们书写的模式显示，不需要段落和换行标签了。但是，比较少用，因为不好整体控制。



#### 5.4 特殊字符 （理解）

 一些特殊的符号，我们再html 里面很难或者 不方便直接 使用， 我们此时可以使用下面的替代代码。

&lt;img src=&quot;media/zifu.png&quot; /&gt;

**虽然有很多，但是我们平时用的比较较少， 大家重点记住   空格    大于号 小于号   就可以了，剩下的回来查阅。**

**总结：**

1. 是以**运算符**`&amp;`开头,以**分号运算符**`;`结尾。
2. 他们不是标签，而是符号。
3. HTML 中不能使用小于号 “&lt;” 和大于号 “&gt;”特殊字符，浏览器会将它们作为标签解析，若要正确显示，在 HTML 源代码中使用字符实体

**团队约定**

   *推荐：*

</code></pre>
<p><a href="#">more &gt;&gt;</a></p>
<pre><code>
   *不推荐：*

</code></pre>
<p><a href="#">more &gt;&gt; </a></p>
<pre><code>
#### 5.5 html5发展之路



 &lt;img src=&quot;media/html5.png&quot; width=&quot;600&quot;/&gt;



#### 5.6 什么是XHTML

XHTML 是更严格更纯净的 HTML 代码。

- XHTML 指**可扩展超文本标签语言**（EXtensible HyperText Markup Language）。
- XHTML 的目标是取代 HTML。
- XHTML 与 HTML 4.01 几乎是相同的。
- XHTML 是更严格更纯净的 HTML 版本。
- XHTML 是作为一种 XML 应用被重新定义的 HTML。
- XHTML 是一个 W3C 标准。

#### 5.7 HTML和 XHTML之间有什么区别?

- XHTML 指的是可扩展超文本标记语言
- XHTML 与 HTML 4.01 几乎是相同的
- XHTML 是更严格更纯净的 HTML 版本
- XHTML 是以 XML 应用的方式定义的 HTML
- XHTML 是 2001 年 1 月发布的 W3C 推荐标准
- XHTML 得到所有主流浏览器的支持
- XHTML 元素是以 XML 格式编写的 HTML 元素。XHTML是严格版本的HTML，例如它要求标签必须小写，标签必须被正确关闭，标签顺序必须正确排列，对于属性都必须使用双引号等。

# 6. @深入阅读

[HTML5的崛起之路](http://www.chinaz.com/manage/2015/0720/424831.shtml)</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[02-认识HTML]]></title>
        <id>https://yanyecarr.github.io//post/02-ren-shi-html</id>
        <link href="https://yanyecarr.github.io//post/02-ren-shi-html">
        </link>
        <updated>2020-04-04T11:14:38.000Z</updated>
        <content type="html"><![CDATA[<h2 id="学习目标">学习目标</h2>
<ul>
<li>理解
<ul>
<li>HTML的概念</li>
<li>HTML标签的分类</li>
<li>HTML标签的关系</li>
<li>HTML标签的语义化</li>
</ul>
</li>
<li>应用
<ul>
<li>HTML骨架格式</li>
<li>sublime基本使用</li>
</ul>
</li>
</ul>
<h1 id="1-html-初识">1. HTML 初识</h1>
<ul>
<li>HTML 指的是超文本标记语言 (<strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage)是用来描述网页的一种语言。</li>
<li>HTML 不是一种编程语言，而是一种标记语言 (markup language)</li>
<li>标记语言是一套标记标签 (markup tag)</li>
</ul>
<p>** 一句话说出html作用:**</p>
<blockquote>
<p>网页是由网页元素组成的 ， 这些元素是利用html标签描述出来，然后通过浏览器解析，就可以显示给用户了。</p>
</blockquote>
<p><strong>所谓超文本，有2层含义：</strong></p>
<ol>
<li>因为它可以加入图片、声音、动画、多媒体等内容（**超越文本限制 **）</li>
<li>不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（**超级链接文本 **）。</li>
</ol>
<pre><code class="language-html">&lt;img src=&quot;timg.jpg&quot; /&gt;
</code></pre>
<p><strong>门外汉眼中的效果页面</strong></p>
<img src="media/title1.png"  />
<p><strong>我们要做的html页面</strong></p>
<img src="media/title.png" />
<p><strong>html 总结:</strong></p>
<ul>
<li>html 是超文本标记(标签)语言</li>
<li>我们学习html 主要学习html标签</li>
<li>我们用html标签描述网页元素。 比如 图片标签 、文字标签、链接标签等等</li>
<li>标签有自己的语法规范，所有的html标签都是用 &lt;&gt; 表示的</li>
<li>H（很）T（甜）M（蜜）L（啦） 是很快乐的一件事情</li>
</ul>
<h2 id="11-html骨架标签">1.1 HTML骨架标签</h2>
<p>日常生活的书信，我们要遵循共同的约定。</p>
<img src="media/mess.png" alt="">
<p>同理：HTML 有自己的语言语法骨架格式：（要遵循，要专业） 要求务必非常流畅的默写下来。。</p>
<pre><code class="language-html">&lt;html&gt;   
    &lt;head&gt;     
        &lt;title&gt;&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h4 id="html骨架标签总结">html骨架标签总结</h4>
<table>
<thead>
<tr>
<th>标签名</th>
<th style="text-align:center">定义</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><html></html></td>
<td style="text-align:center">HTML标签</td>
<td style="text-align:left">页面中最大的标签，我们成为  根标签</td>
</tr>
<tr>
<td><head></head></td>
<td style="text-align:center">文档的头部</td>
<td style="text-align:left">注意在head标签中我们必须要设置的标签是title</td>
</tr>
<tr>
<td><titile></title></td>
<td style="text-align:center">文档的标题</td>
<td style="text-align:left">让页面拥有一个属于自己的网页标题</td>
</tr>
<tr>
<td><body></body></td>
<td style="text-align:center">文档的主体</td>
<td style="text-align:left">元素包含文档的所有内容，页面内容 基本都是放到body里面的</td>
</tr>
</tbody>
</table>
<p>**课堂练习1： **</p>
<p>书写我们的第一个HTML 页面。</p>
<ol>
<li>
<p>新建一个 01-html骨架标签  的 TXT 文件。</p>
</li>
<li>
<p>里面写入刚才的HTML 骨架。</p>
</li>
<li>
<p>把后缀名改为 .HTML。</p>
</li>
<li>
<p>右击--谷歌浏览器打开。</p>
<pre><code class="language-html">&lt;html&gt;   
    &lt;head&gt;     
        &lt;title&gt;我的第一个页面&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
           你我之间 黑马洗练 月薪过万   一飞冲天   
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
</li>
</ol>
 <img src='./media/01html骨架.jpg'>
<p>为了便于记忆，我们请出刚才要辞职回家养猪的二师兄来帮忙， 我称之为  猪八戒记忆法</p>
<img src="media/pig.png" width="500" />
<h4 id="团队约定大小写">团队约定大小写</h4>
<p>HTML标签名、类名、标签属性和大部分属性值统一用小写</p>
<p><em>推荐：</em></p>
<pre><code>&lt;head&gt;     
        &lt;title&gt;我的第一个页面&lt;/title&gt;
 &lt;/head&gt;
</code></pre>
<p><em>不推荐：</em></p>
<pre><code>&lt;HEAD&gt;     
        &lt;TITLE&gt;我的第一个页面&lt;/TITLE&gt;
&lt;/HEAD&gt;
</code></pre>
<h2 id="12-html元素标签分类">1.2 HTML元素标签分类</h2>
<p><strong>标签：</strong></p>
<p>在HTML页面中，带有“&lt; &gt;”符号的元素被称为HTML标签，如上面提到的 &lt;html&gt;、&lt;head&gt;、&lt;body&gt;都是HTML骨架结构标签。</p>
<p><strong>分类：</strong></p>
<ol>
<li>常规元素（双标签）</li>
</ol>
<pre><code class="language-html">&lt;标签名&gt; 内容 &lt;/标签名&gt;   比如 &lt;body&gt;  我是文字  &lt;/body&gt;
</code></pre>
<ul>
<li>该语法中“&lt;标签名&gt;”表示该标签的作用开始，一般称为“开始标签（start tag）”，“&lt;/标签名&gt;” 表示该标签的作用结束，一般称为“结束标签（end tag）”。</li>
<li>和开始标签相比，结束标签只是在前面加了一个关闭符“/”。</li>
<li>我们以后接触的基本都是双标签</li>
</ul>
<ol start="2">
<li>空元素（单标签）</li>
</ol>
<pre><code class="language-html">&lt;标签名 /&gt;  比如  &lt;br /&gt;
</code></pre>
<ul>
<li>空元素 用单标签来表示， 简单点说，就是里面不需要包含内容， 只有一个开始标签不需要关闭。</li>
<li>这种单身狗标签非常少，一共没多少，我们多记忆就好</li>
</ul>
<p>** 一句话说出他们:**</p>
<blockquote>
<p>世界上单身狗毕竟是少数的， 大部分还是喜欢成双成对，不要拉下你的另外一半，对待一个双标签要有始有终。</p>
</blockquote>
<h2 id="13-html标签关系">1.3 HTML标签关系</h2>
<p>主要针对于<strong>双标签</strong> 的相互关系分为两种：  请大家务必熟悉记住这种标签关系，因为后面我们标签嵌套特别多，很容易弄混他们的关系。</p>
<ol>
<li>嵌套关系</li>
</ol>
<pre><code class="language-html">&lt;head&gt;  
	&lt;title&gt; &lt;/title&gt; 
&lt;/head&gt;
</code></pre>
<img src="media/father.jpg">
<p>2.并列关系</p>
<pre><code class="language-html">&lt;head&gt;&lt;/head&gt;
&lt;body&gt;&lt;/body&gt;
</code></pre>
<img src="media/xiong.jpg" width="500">
<p><strong>倡议：</strong></p>
<blockquote>
<pre><code class="language-html">如果两个标签之间的关系是嵌套关系，子元素最好缩进一个tab键的身位（一个tab是4个空格）。如果是并列关系，最好上下对齐。
</code></pre>
</blockquote>
<p>** 一句话说出他们:**</p>
<blockquote>
<p>html双标签 可以分为  有 一种是 父子级 包含关系的标签      一种是 兄弟级 并列关系的标签</p>
</blockquote>
<h2 id="14-课堂一练">1.4 课堂一练</h2>
<p>**请问下列哪组标签关系是错误的？ **</p>
<ul class="contains-task-list">
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6251395"> <head> </head><body> <label class="task-list-item-label" for="task-item-6251395"> <head> </head><body> </body></label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4331436"> <div> <strong></strong> <label class="task-list-item-label" for="task-item-4331436"> <div> <strong></strong> </div></label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5792274"> <head> <title></head> <label class="task-list-item-label" for="task-item-5792274"> <head> <title></head> </title></label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4105215"> <body> <div></div> <label class="task-list-item-label" for="task-item-4105215"> <body> <div></div> </body></label></p>
</li>
</ul>
<h1 id="2-代码开发工具书写代码">2. 代码开发工具（书写代码）</h1>
<ul>
<li>
<p>为了提高我们的开发效率</p>
</li>
<li>
<p>减少代码的出错我们不提倡用记事本开发，我们有更好的犀利哥。</p>
<img src="media/s.png" />
</li>
<li>
<p>Dreamweaver</p>
</li>
<li>
<p>SublimeText</p>
</li>
<li>
<p>WebStorm</p>
</li>
<li>
<p>HBuilder</p>
</li>
<li>
<p>VScode</p>
</li>
</ul>
<p>有人说：</p>
<p>普通青年    Dreamweaver</p>
<p>文艺青年    sublime</p>
<p>高手和傻子  用记事本</p>
<p>其实。。。。</p>
  <img src="media/node.png" />
<p>感觉： 这个feel 倍儿爽 feel feel倍儿爽 爽爽爽爽！</p>
 <img src="media/shuang.gif" />
<p>sublime有非常多的优点， 最开心的就是非常轻量级，打开速度超快，后面更高的功能，后面再接触。</p>
<p><strong>sublime生成html骨架小技巧</strong></p>
<ul>
<li>双击打开软件</li>
<li>新建文件（ctrl+n）</li>
<li>保存（ctrl+s）,保存为：文件名.html （ 注意 后缀名必须是 .html )</li>
<li>放大缩小代码  按住 ctrl  在 滚动鼠标滚轮  或者   ctrl+ 加号 键     和 ctrl +   减号键</li>
<li>生成页面骨架结构
<ul>
<li>html: 5    按下tab键    或者</li>
<li>!    按下tab键</li>
</ul>
</li>
<li>在浏览器中预览页面
<ul>
<li>右键在  浏览器中打开</li>
</ul>
</li>
</ul>
<h1 id="3-文档类型doctype">3. 文档类型&lt;!DOCTYPE&gt;</h1>
<p><strong>用法：</strong></p>
<pre><code class="language-html">&lt;!DOCTYPE html&gt; 
</code></pre>
<p><strong>作用：</strong></p>
<!DOCTYPE> 声明位于文档中的最前面的位置，处于 <html> 标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。
<p>** 一句话说出他们:**</p>
   <!DOCTYPE html>  就是告诉浏览器按照HTML5 规范解析页面.
<p><strong>团队约定：</strong></p>
<blockquote>
<pre><code>HTML文件必须加上 DOCTYPE 声明，并统一使用 HTML5 的文档声明
</code></pre>
</blockquote>
<h1 id="4-页面语言lang">4. 页面语言lang</h1>
<pre><code class="language-html">&lt;html lang=&quot;en&quot;&gt;  指定html 语言种类
</code></pre>
<p>最常见的2个：</p>
<ol>
<li><code>en</code>定义语言为英语</li>
<li><code>zh-CN</code>定义语言为中文</li>
</ol>
<p>** 一句话说出他们:**</p>
<blockquote>
<html lang="zh-CN">  指定该html标签 内容 所用的语言为中文
</blockquote>
<p><strong>团队约定：</strong></p>
<blockquote>
<pre><code>考虑浏览器和操作系统的兼容性，目前仍然使用 zh-CN 属性值
</code></pre>
</blockquote>
<p><strong>@拓展阅读：</strong></p>
<p>简单来说，可能对于程序来说没有太大的作用，但是它可以告诉浏览器，搜索引擎，一些处理Html的程序对页面语言内容来做一些对应的处理或者事情。
比如可以</p>
<ul>
<li>根据根据lang属性来设定不同语言的css样式，或者字体</li>
<li>告诉搜索引擎做精确的识别</li>
<li>让语法检查程序做语言识别</li>
<li>帮助翻译工具做识别</li>
<li>帮助网页阅读程序做识别
等等</li>
</ul>
<h1 id="5-字符集">5. 字符集</h1>
<pre><code class="language-html">&lt;meta charset=&quot;UTF-8&quot; /&gt;
</code></pre>
<pre><code>字符集(Character set)是多个字符的集合。

计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。
</code></pre>
<p>utf-8是目前最常用的字符集编码方式，常用的字符集编码方式还有gbk和gb2312。</p>
<ul>
<li>gb2312 简单中文  包括6763个汉字  GUO BIAO</li>
<li>BIG5   繁体中文 港澳台等用</li>
<li>GBK包含全部中文字符    是GB2312的扩展，加入对繁体字的支持，兼容GB2312</li>
<li>UTF-8则基本包含全世界所有国家需要用到的字符</li>
<li><strong>这句代码非常关键， 是必须要写的代码，否则可能引起乱码的情况。</strong></li>
</ul>
<p>** 一句话说出他们:**</p>
<blockquote>
<p>这句话是让 html 文件是以 UTF-8 编码保存的， 浏览器根据编码去解码对应的html内容。</p>
</blockquote>
<p><strong>团队约定：</strong></p>
<blockquote>
<pre><code>一般情况下统一使用 &quot;UTF-8&quot; 编码, 请尽量统一写成标准的 &quot;UTF-8&quot;，不要写成 &quot;utf-8&quot; 或 &quot;utf8&quot; 或 &quot;UTF8&quot;。
</code></pre>
</blockquote>
<h1 id="6-html标签的语义化">6. HTML标签的语义化</h1>
<p>白话： 所谓标签语义化，就是指标签的含义。</p>
<p>** 一句话说出语义化目的:**</p>
<blockquote>
<p>根据标签的语义，在合适的地方给一个最为合理的标签，让结构更清晰。</p>
</blockquote>
<ol>
<li>方便代码的阅读和维护</li>
<li>同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容</li>
<li>使用语义化标签会具有更好地搜索引擎优化</li>
</ol>
<img src='./media/02语义化.jpg'>
<p>语义是否良好： 当我们去掉CSS之后，网页结构依然组织有序，并且有良好的可读性。(  裸奔起来一样好看 )</p>
<p>遵循的原则：先确定语义的HTML ，再选合适的CSS。所以，<strong>我们接下来学习html标签，要根据语义去记忆。</strong> HTML网页中任何元素的实现都要依靠HTML标签。</p>
<h1 id="7-拓展阅读">7. 拓展阅读@</h1>
<h2 id="单身狗的由来">单身狗的由来</h2>
<p>单身狗一词最早是出自网络社区，起源与大话西游有关。</p>
<p>大话西游之大圣娶亲最后一幕“他好像一条狗”由来。</p>
 <img src='./media/dog.jpg'>
 <img src='./media/dog2.jpg'>
 <img src='./media/dog3.jpg'>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[01-前言&WEB标准]]></title>
        <id>https://yanyecarr.github.io//post/01-qian-yan-andweb-biao-zhun</id>
        <link href="https://yanyecarr.github.io//post/01-qian-yan-andweb-biao-zhun">
        </link>
        <updated>2020-04-04T11:07:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="html-第一天目标">HTML 第一天目标</h1>
<p>能够写出基本的html页面（里面包含图片、链接、文字等网页元素标签）</p>
<img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/a.png" width="1000" />
<h1 id="认识web">认识WEB</h1>
<h2 id="1-认识网页">1. 认识网页</h2>
<pre><code>网页主要由文字、图像和超链接等元素构成。当然，除了这些元素，网页中还可以包含音频、视频以及Flash等。
</code></pre>
<p>&lt;img src=&quot;media/mi.png&quot;alt=&quot;&quot;&gt;</p>
<p><strong>思考：</strong></p>
<p>网页是如何形成的呢?</p>
<img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/web.png" />
<h3 id="总结">总结</h3>
<p>网页有图片、链接、文字等元素组成，我们后面的任务就是要把这部分网页元素用代码写出来。。。</p>
<h2 id="2-浏览器显示代码">2. 浏览器（显示代码）</h2>
<p>平时我们浏览网页，是在浏览器地址栏中输入网页地址，就可以访问我们的页面了。你的浏览器呢？</p>
<img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/add.png" >
<pre><code>浏览器是网页显示、运行的平台，常用的浏览器有IE、火狐（Firefox）、谷歌（Chrome）、Safari和Opera等。我们平时称为五大浏览器。
</code></pre>
<img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/b.png" />
<p>可能你最熟悉的是 IE浏览器，但是。。。</p>
<img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/liulan.jpg" >
<h3 id="21-查看浏览器占有的市场份额">2.1 查看浏览器占有的市场份额</h3>
<p>查看网站： <a href="http://tongji.baidu.com/data/browser" target="_blank">http://tongji.baidu.com/data/browser</a></p>
<img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/count.png" />
<p>2008年，大名鼎鼎的互联网巨头Google公司发布了它的首款浏览器Chrome浏览器。</p>
<p>跟王思聪一样，没办法，生下来人家就是富二代官二代啊，后台太强，而且确实先天能力得天独厚。</p>
<p>** 一句话说出他们:**</p>
<blockquote>
<p>出自谷歌，唯我不败；一统江湖，千秋万代。</p>
</blockquote>
<h3 id="22-常见浏览器内核了解">2.2 常见浏览器内核（了解）</h3>
<p>首先解释一下浏览器内核是什么东西。英文叫做：Rendering Engine，中文翻译很多，排版引擎、解释引擎、渲染引擎，现在流行称为浏览器内核.</p>
<pre><code>负责读取网页内容，整理讯息，计算网页的显示方式并显示页面.
</code></pre>
<p>因为浏览器太多啦， 但是现在主要流行的就是下面几个：</p>
<table>
<thead>
<tr>
<th style="text-align:left">浏览器</th>
<th style="text-align:center">内核</th>
<th style="text-align:left">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">IE</td>
<td style="text-align:center">Trident</td>
<td style="text-align:left">IE、猎豹安全、360极速浏览器、百度浏览器</td>
</tr>
<tr>
<td style="text-align:left">firefox</td>
<td style="text-align:center">Gecko</td>
<td style="text-align:left">可惜这几年已经没落了，打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。</td>
</tr>
<tr>
<td style="text-align:left">Safari</td>
<td style="text-align:center">webkit</td>
<td style="text-align:left">现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了）。苹果感觉像被别人抢了媳妇，都哭晕再厕所里面了。</td>
</tr>
<tr>
<td style="text-align:left">chrome</td>
<td style="text-align:center">Chromium/Blink</td>
<td style="text-align:left">在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。大部分国产浏览器最新版都采用Blink内核。二次开发</td>
</tr>
<tr>
<td style="text-align:left">Opera</td>
<td style="text-align:center">Presto</td>
<td style="text-align:left">Presto（已经废弃） 是挪威产浏览器 opera 的 &quot;前任&quot; 内核，为何说是 &quot;前任&quot;，因为最新的 opera 浏览器早已将之抛弃从而投入到了谷歌怀抱了。  现在用blink内核。</td>
</tr>
</tbody>
</table>
<p><strong>拓展阅读：</strong></p>
<pre><code>移动端的浏览器内核主要说的是系统内置浏览器的内核。

Android手机而言，使用率最高的就是Webkit内核，大部分国产浏览器宣称的自己的内核，基本上也是属于webkit二次开发。

iOS以及WP7平台上，由于系统原因，系统大部分自带浏览器内核，一般是Safari或者IE内核Trident的
</code></pre>
<h2 id="3-web标准重点">3. Web标准（重点）</h2>
<p>目标</p>
<ul>
<li>记忆
<ul>
<li>能说出网页 中 web 标准三层组成</li>
</ul>
</li>
<li>理解
<ul>
<li>能结合人来表述web标准三层</li>
</ul>
</li>
</ul>
<p>Web标准不是某一个标准，而是由W3C组织和其他标准化组织制定的一系列标准的集合。</p>
<p>W3C 万维网联盟是国际最著名的标准化组织。1994年成立后，至今已发布近百项相关万维网的标准，对万维网发展做出了杰出的贡献。</p>
<p><strong>w3c就类似于现实世界中的联合国。</strong></p>
<h3 id="31-为什么要遵循web标准呢">3.1 为什么要遵循WEB标准呢？</h3>
<p>通过以上浏览器的内核不同，我们知道他们渲染或者排版的模式就有些许差异，显示就会有差别。</p>
<pre><code>问：  哪个方言再全国基本都可以听得懂？ 
</code></pre>
<img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/bz.png" />
<h3 id="32-web-标准的好处">3.2 Web 标准的好处</h3>
<p><em>1</em>、让Web的发展前景更广阔
<em>2</em>、内容能被更广泛的设备访问
<em>3</em>、更容易被搜寻引擎搜索
<em>4</em>、降低网站流量费用
<em>5</em>、使网站更易于维护
<em>6</em>、提高页面浏览速度</p>
<p>专业的人做专业的事。  来呀~快活呀~反正有大把时间~</p>
<h3 id="33-web-标准构成">3.3 Web 标准构成</h3>
<p><strong>构成：</strong> 主要包括结构（Structure）、表现（Presentation）和行为（Behavior）三个方面。</p>
<ul>
<li>
<p>结构标准：结构用于对网页元素进行整理和分类，咱们主要学的是HTML。 对于网页来说最重要的一部分</p>
</li>
<li>
<p>表现标准：表现用于设置网页元素的版式、颜色、大小等外观样式，主要指的是CSS</p>
</li>
<li>
<p>行为标准：行为是指网页模型的定义及交互的编写，咱们主要学的是 Javascript</p>
</li>
</ul>
<p>理想状态我们的源码： .HTML      .css      .js</p>
<p>直观感受：</p>
<img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/gx.png" />
<p>总结WEB标准：</p>
<p>结构标准：   <img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/hb1.png" width="300" />  决定你是否有个好天然身体</p>
<p><strong>结构层：通过对语义的分析，可以对其划分结构。具有了结构的内容，将更容易阅读</strong></p>
 <img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/htmll.jpg" />
<p>表现标准：   <img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/hb2.png" width="300" />  决定你是否打扮的美丽外观</p>
<p><strong>表现层：是为了让网页就能展现出灵活多样的显示效果</strong></p>
 <img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/css.jpg" />
<p>行为标准：   <img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/hb3.jpg"  width="420"   />  决定你是否有吸引人的行为</p>
<p><strong>行为层：用户对网页进行操作，网页可以做出响应性的变化。</strong></p>
  <img src="H:/web前端/【27】源码+课件+软件/01-03 前端开发基础/01-HTML资料/02.HTML-Day02/笔记/media/search.gif" />
<h3 id="小结">小结</h3>
<ul>
<li>web标准有三层结构，分别是结构（html）、表现（css）和行为（javascript）</li>
<li>结构类似人的身体， 表现类似人的着装， 行为类似人的行为动作</li>
<li>理想状态下，他们三层都是独立的， 放到不同的文件里面</li>
</ul>
<h2 id="4-拓展">4. 拓展@</h2>
<ul>
<li>
<p><strong>介绍一下你对浏览器内核的理解？常见的浏览器内核有哪些？</strong></p>
<p>浏览器内核包括两部分，渲染引擎和js引擎。渲染引擎负责读取网页内容，整理讯息，计算网页的显示方式并显示页面，js引擎是解析执行js获取网页的动态效果。 后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。
IE：Trident
firefox：Gecko
chrom、safari：webkit
Opera：Presto
Microsoft Edge：EdgeHTML</p>
<p>深度阅读：<a href="http://blog.csdn.net/summer_15/article/details/71249203">五大主流浏览器内核的源起以及国内各大浏览器内核总结</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Elasticsearch与部署]]></title>
        <id>https://yanyecarr.github.io//post/elasticsearch-yu-bu-shu</id>
        <link href="https://yanyecarr.github.io//post/elasticsearch-yu-bu-shu">
        </link>
        <updated>2020-04-01T12:12:08.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1es定义">1.ES定义</h2>
<blockquote>
<p>ES=elaticsearch简写， Elasticsearch是一个开源的高扩展的分布式全文检索引擎，它可以近乎实时的存储、检索数据；本身扩展性很好，可以扩展到上百台服务器，处理PB级别的数据。
Elasticsearch也使用Java开发并使用Lucene作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的RESTful API来隐藏Lucene的复杂性，从而让全文搜索变得简单。</p>
</blockquote>
<h2 id="2lucene与es关系">2.Lucene与ES关系</h2>
<blockquote>
<p>1）Lucene只是一个库。想要使用它，你必须使用Java来作为开发语言并将其直接集成到你的应用中，更糟糕的是，Lucene非常复杂，你需要深入了解检索的相关知识来理解它是如何工作的。</p>
<p>2）Elasticsearch也使用Java开发并使用Lucene作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的RESTful API来隐藏Lucene的复杂性，从而让全文搜索变得简单。</p>
</blockquote>
<h2 id="3-es主要解决问题">3 ES主要解决问题</h2>
<pre><code>1）检索相关数据； 
2）返回统计结果； 
3）速度要快。
</code></pre>
<h2 id="4es核心概念">4.ES核心概念</h2>
<pre><code>1）Cluster：集群。
ES可以作为一个独立的单个搜索服务器。不过，为了处理大型数据集，实现容错和高可用性，ES可以运行在许多互相合作的服务器上。这些服务器的集合称为集群。

2）Node：节点。
形成集群的每个服务器称为节点。

3）Shard：分片。
当有大量的文档时，由于内存的限制、磁盘处理能力不足、无法足够快的响应客户端的请求等，一个节点可能不够。这种情况下，数据可以分为较小的分片。每个分片放到不同的服务器上。 
当你查询的索引分布在多个分片上时，ES会把查询发送给每个相关的分片，并将结果组合在一起，而应用程序并不知道分片的存在。即：这个过程对用户来说是透明的。

4）Replia：副本。
为提高查询吞吐量或实现高可用性，可以使用分片副本。 
副本是一个分片的精确复制，每个分片可以有零个或多个副本。ES中可以有许多相同的分片，其中之一被选择更改索引操作，这种特殊的分片称为主分片。 
当主分片丢失时，如：该分片所在的数据不可用时，集群将副本提升为新的主分片。

5）全文检索。
全文检索就是对一篇文章进行索引，可以根据关键字搜索，类似于mysql里的like语句。 
全文索引就是把内容根据词的意义进行分词，然后分别创建索引，例如”你们的激情是因为什么事情来的” 可能会被分词成：“你们“，”激情“，“什么事情“，”来“ 等token，这样当你搜索“你们” 或者 “激情” 都会把这句搜出来。
</code></pre>
<h2 id="6es数据架构的主要概念与关系数据库mysql对比">6.ES数据架构的主要概念（与关系数据库Mysql对比）</h2>
<p><img src="https://img-blog.csdn.net/20160818210034345" alt="img"></p>
<pre><code>（1）关系型数据库中的数据库（DataBase），等价于ES中的索引（Index） 
（2）一个数据库下面有N张表（Table），等价于1个索引Index下面有N多类型（Type）， 
（3）一个数据库表（Table）下的数据由多行（ROW）多列（column，属性）组成，等价于1个Type由多个文档（Document）和多Field组成。 
（4）在一个关系型数据库里面，schema定义了表、每个表的字段，还有表和字段之间的关系。 与之对应的，在ES中：Mapping定义索引下的Type的字段处理规则，即索引如何建立、索引类型、是否保存原始索引JSON文档、是否压缩原始JSON文档、是否需要分词处理、如何进行分词处理等。 
（5）在数据库中的增insert、删delete、改update、查search操作等价于ES中的增PUT/POST、删Delete、改_update、查GET. 
</code></pre>
<h2 id="7es部署">7.ES部署</h2>
<h3 id="1环境准备">1.环境准备</h3>
<h4 id="11安装jdk">1.1安装jdk</h4>
<pre><code>两种方式：
1.命令安装:
1)查询要安装的jdk版本 yum -y list java* 
2) yum install -y java-1.8.0-openjdk.x86_64 3)java -version 查看是否安装 ps:默认安装到usr/lib/jvm下
2.手动安装:
1)先去官网下载jdk
2)上传到服务器 
3）解压 jdktar -zxvf jdk-8u211-linux-x64.tar.gz（jdk-8..这个是刚下载的jdk名称） 
4）配置环境变量：vim /etc/profile 最下面添加如下环境变量
export JAVA_HOME=/DATA/jdk/jdk1.8.0_211  -- 解压缩的路径
export CLASSPATH=$:CLASSPATH:$JAVA_HOME/lib/ 
export PATH=$PATH:$JAVA_HOME/bin
5）刷新环境变量命令:source /etc/profile 
6）java -version 查看是否安装
</code></pre>
<h4 id="21-安装elasticsearch">2.1 安装elasticsearch</h4>
<ul>
<li>
<p>下载安装包
官网地址：https://www.elastic.co/</p>
</li>
<li>
<p>解压安装包
tar -zxvf elasticsearch-7.7.1.tar.gz -C /export/servers(解压缩地址)</p>
</li>
<li>
<p>重命名安装目录
mv elasticsearch-7.7.1 elasticsearch</p>
</li>
<li>
<p>修改配置文件
cd elasticsearch中的config文件夹中 修改elasticsearch.yml文件</p>
<pre><code>#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。
cluster.name: my-es
#节点名称
node.name: node-1
#设置索引数据的存储路径
path.data: /usr/local/elasticsearch/data
#设置日志的存储路径
path.logs: /usr/local/elasticsearch/logs
#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中
network.host: 0.0.0.0
#设置对外服务的http端口
http.port: 9200
#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点
discovery.zen.ping.unicast.hosts: [&quot;127.0.0.1&quot;,&quot;10.10.10.34:9200&quot;]
</code></pre>
<p>注：</p>
</li>
</ul>
<p>1、补齐必要的目录</p>
<p>mkdir -p /usr/local/elasticsearch/data</p>
<p>mkdir -p /usr/local/elasticsearch/logs   (目录可能已经存在，需先确定清楚)</p>
<p>​		2、network.host: 0.0.0.0</p>
<p>修改Elasticsearch的配置，使其支持外网访问。在浏览器中，访问http://xxxx:9200/（xxxx是运行elasticsearch的服务器的ip地址）即可。否则这可以在本机使用。</p>
<h3 id="2解决报错">2.解决报错</h3>
<p>1.地址已在使用<img src="C:%5CUsers%5Cwhsw%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585707253795.png" alt="1585707253795"></p>
<p>解决方法：</p>
<p>netstat -alnp | grep 9200</p>
<p><img src="C:%5CUsers%5Cwhsw%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585707336716.png" alt="1585707336716"></p>
<p>kill -9 10220</p>
<p>2.在<a href="https://www.baidu.com/s?wd=root&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd">root</a>用户下启动时报错</p>
<p>因为安全问题elasticsearch 不让用root用户直接运行，所以要创建新用户。</p>
<p>具体操作如下:
　　useradd testuser
　　passwd testuser</p>
<p>chown -R testuser:testuser 解压缩路径</p>
<p>3.[1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65535]</p>
<p>原因：Elasticsearch使用大量文件描述符或文件句柄。用完文件描述符可能是灾难性的，最有可能导致数据丢失。确保将运行Elasticsearch的用户的打开文件描述符数量限制增加到65,536或更高</p>
<p>vi /etc/security/limits.conf</p>
<p><img src="C:%5CUsers%5Cwhsw%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585708247696.png" alt="1585708247696"></p>
<p>4.[2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</p>
<p>vi /etc/sysctl.conf</p>
<p><img src="C:%5CUsers%5Cwhsw%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585708272844.png" alt="1585708272844"></p>
<p>sysctl -p</p>
<p>[3]: the default discovery settings are unsuitable for production use; at least one of [discovery.seed_hosts, discovery.seed_providers, cluster.initial_master_nodes] must be configured</p>
<p>解决</p>
<p>vi elasticsearch.yml</p>
<p>取消注释</p>
<p>cluster.initial_master_nodes: [&quot;node-1&quot;, &quot;node-2&quot;]</p>
<p><img src="C:%5CUsers%5Cwhsw%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585708291288.png" alt="1585708291288"></p>
<h3 id="3安装分词ik和head">3.安装分词IK和Head</h3>
<h4 id="安装分词ik">安装分词ik</h4>
<pre><code>下载地址：https://github.com/medcl/elasticsearch-analysis-ik/releases

将文件复制到ES /plugin/ik 下面
</code></pre>
<h4 id="安装head">安装Head</h4>
<blockquote>
<pre><code>elasticsearch-head是一个界面化的集群操作和管理工具，可以对集群进行傻瓜式操作。你可以通过插件把它集成到es（首选方式）,也可以安装成一个独立webapp。
es-head主要有三个方面的操作：
　　a、显示集群的拓扑,并且能够执行索引和节点级别操作
　　b、搜索接口能够查询集群中原始json或表格格式的检索数据
　　c、能够快速访问并显示集群的状态
有一个输入窗口,允许任意调用RESTful API。这个接口包含几个选项,可以组合在一起以产生有趣的结果; 
请求方法(get、put、post、delete),查询json数据,节点和路径
　　　　　　支持JSON验证器
　　　　　　支持重复请求计时器
　　　　　　支持使用javascript表达式变换结果
收集结果的能力随着时间的推移(使用定时器),或比较的结果，能力图表转换后的结果在一个简单的条形图(包括时间序列)
</code></pre>
</blockquote>
<pre><code>1. https://github.com/mobz/elasticsearch-head 下载解压
2.安装node.js
3. cd /path/to/elasticsearch-head
npm install -g grunt-cli
npm install
grunt server
4. http://localhost:9100/
5. 运行es
</code></pre>
<p>unzip解压失败</p>
<p>安装7zip</p>
<p>官网地址：http://www.7-zip.org/download.html</p>
<pre><code>tar -jxvf p7zip_16.02_src_all.tar.bz2
cd p7zip_16.02
make &amp;&amp; make install

</code></pre>
<ul>
<li>如果执行make命令时，提示安装g++的话，请执行 <code>yum install gcc-c++</code></li>
<li>出现 tar (child): bzip2: Cannot exec: No such file or directory，请安装<code>yum install bzip2 -y</code></li>
</ul>
<p>出现以下信息，即为安装完毕</p>
<pre><code>./install.sh /usr/local/bin /usr/local/lib/p7zip /usr/local/man /usr/local/share/doc/p7zip 

installing /usr/local/bin/7za

installing /usr/local/man/man1/7z.1

installing /usr/local/man/man1/7za.1

installing /usr/local/man/man1/7zr.1

installing /usr/local/share/doc/p7zip/README

installing /usr/local/share/doc/p7zip/ChangeLog

installing HTML help in /usr/local/share/doc/p7zip/DOC

</code></pre>
<p>7z命令的使用
解压缩7z文件</p>
<p>1参数含义：</p>
<ul>
<li>x 代表解压缩文件，并且是按原始目录树解压（还有个参数 e 也是解压缩文件，但其会将所有文件都解压到根下，而不是自己原有的文件夹下）</li>
<li>test.zip 是当前目录下的压缩文件，这里用做测试文件</li>
<li>-r 表示递归解压缩所有的子文件夹</li>
<li>-o 是指定解压到的目录，-o后是没有空格的，直接接目录(-o./ 为当前目录)</li>
</ul>
<p>压缩文件/文件夹</p>
<pre><code>7za a -t7z -r test.7z /opt/test/*

</code></pre>
<p>1参数含义：</p>
<ul>
<li>a 代表添加文件/文件夹到压缩包</li>
<li>-t 是指定压缩类型，这里定为7z，可不指定，因为7za默认压缩类型就是7z</li>
<li>-r 表示递归所有的子文件夹</li>
<li>test.7z 是压缩好后的压缩包名</li>
<li>/opt/test/* 是压缩目录
注意：7za不仅仅支持.7z压缩格式，还支持.zip.、tar、.bz2等压缩类型</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[常用Linux命令]]></title>
        <id>https://yanyecarr.github.io//post/chang-yong-linux-ming-ling</id>
        <link href="https://yanyecarr.github.io//post/chang-yong-linux-ming-ling">
        </link>
        <updated>2020-03-30T13:38:55.000Z</updated>
        <content type="html"><![CDATA[ <!-- more --> 
<h2 id="1帮助命令">1.帮助命令</h2>
<pre><code class="language-python">man --man命令 查看命令的使用帮助说明
</code></pre>
<h2 id="2显示目录和文件的命令">2.显示目录和文件的命令</h2>
<pre><code class="language-python">ls --用于查看当前目录所有文件夹的命令

dir -- 用于显示指定文件夹和目录的命令
tree -- 以树状图列出目录和内容
du -- 显示目录或文件大小
</code></pre>
<h2 id="3改变目录和查看当前目录的命令">3.改变目录和查看当前目录的命令</h2>
<pre><code>cd --进入工作目录
cd .. -- 回退到上一级命令
pwd -- 显示当前用户所在工作目录位置
</code></pre>
<h2 id="4修改目录文件权限和属主及数组命令">4.修改目录，文件权限和属主及数组命令</h2>
<pre><code>chmod -- 用于改变指定目录或文件的权限命令
chown -- 用于改变文件拥有属性的命令
chgrp -- 用于改变文件群组的命令
chattr -- 用于设置文件具有不可删除和修改权限
lsattr -- 用于显示文件或目录的隐藏属性
</code></pre>
<h2 id="5创建和删除目录的命令">5.创建和删除目录的命令</h2>
<pre><code>mkdir -- 用于创建目录
rmdir -- 永远忽删除空的目录
rm -f -- 用于删除不为空的目录
（千万不要用rm -rf /*!）
</code></pre>
<h2 id="6创建和删除-重用名-复制文件的命令">6.创建和删除、重用名、复制文件的命令</h2>
<pre><code>touch -- 创建一个新的文件
vi -- 创建一个新的文件
rm -- 删除文件或目录
mv -- 重命名或移动文件命令
cp -- 复制命令
scp -- 用于将本地的文件或目录复制到远程服务器
wget -- 用于下载ftp和http服务器的文件到本地
</code></pre>
<h2 id="7显示文件内容的命令">7.显示文件内容的命令</h2>
<pre><code>cat -- 用于显示指定文件的全部内容
more -- 用分页的形式显示指定文件的内容
less -- 用分页的形式显示指定文件的内容，区别是more和less翻页使用的操作键不同
head -- 用于显示文件前n行的内容
tail -- 用于显示文件后n行的内容
tail -f -- 用于自动刷新的显示文件后n行的数据内容
</code></pre>
<h2 id="8查找命令">8.查找命令</h2>
<pre><code>find -- 查找指定目录或文件的命令
whereis --  查找指定的文件源和二进制文件和手册等
which -- 用于查询命令或别名的位置
locate -- 快速找系统数据库中指定的内容
grep -- 在指定的文件或标准输出，标准输入内，查找满足条件的内容
</code></pre>
<h2 id="9关机和重启计算机的命令">9.关机和重启计算机的命令</h2>
<pre><code>shutdown -- 关机重启命令
常用参数：
-r 关机后立即重启
-k 并不真正的关机，而只是发出警告信息给所有用户
-h 关机后不重新启动
poweroff -- 用于关机和关闭电源
init -- 改变系统运行级别
0级用于关闭系统
1级用于单一使用者模式
2级用来进行多用户使用模式（但不带网络功能）
3级用来进行多用户使用模式（带网络功能）
4级用来进行用户自定义使用模式
5级表示进行x windows时模式
6级用来重启系统
reboot -- 用于计算机重启
halt -- 用于关闭计算机系统

</code></pre>
<h2 id="10压缩和打包命令">10.压缩和打包命令</h2>
<pre><code>tar -- 用于多个文件或目录进行打包，但不压缩，同时也用命令进行解包
gzip -- 用于文件进行压缩命令，文件拓展名为.gz结尾
gunzip -- 用于对gzip压缩文档进行解压缩
bzip2 -- 用于对文件或目录进行压缩或解压缩
bzcat -- 用于显示压缩文件的内容
compress/un compress -- 压缩/解压缩.z文件
zcat -- 查看z或gz结尾的压缩文件内容
gzexe -- 压缩可执行文件
unarg -- 解压缩.arj文件
zip/unzip -- 压缩解压缩.zip文件

</code></pre>
<h2 id="11用户操作命令">11.用户操作命令</h2>
<pre><code>su -- 切换用户命令
sudo -- 以系统管理员的身份执行命令
passwd -- 用于修改用户的命令

</code></pre>
<h2 id="12-文件链接命令">12、文件链接命令</h2>
<pre><code>ln -- 为源文件创建一个链接，，并不将源文件复制一份，即占用的空间很小。可以分为软链接和硬链接。
软链接（带参数-s）：也成为符号链接，即为文件或目录创建一个快捷方式
硬链接（不带参数-s）：给一个文件取多于一个名字，放在不同目录中，方便用户使用
ln命令参数如下：
-f 在创建链接时，先将与目的对象同名的文件或目录删除；
-d 允许系统管理者硬链接自己的目录；
-i 在删除与目的对象同名文件或目录时先询问用户；
-n 在创建软链接时，将目的对象视为一般的文件；
-s 创建软链接，即符号链接；
-v 在链接之前显示文件或目录名；
-b 将在链接时会被覆盖或删除的文件进行备份；

</code></pre>
<h2 id="13其他命令">13.其他命令</h2>
<pre><code>-ami 显示当前用户；
-u 显示使用者的动作/工作；
-s 使用简短的格式来显示；
-v 显示程序版本；
free -- 查看当前系统的内存使用情况。
uptime -- 显示系统运行了多长时间。
ps -- 显示瞬间进程的动态。
pstree -- 以树状方式显示系统中所有的进程。
date -- 显示或设定系统的日期与时间。
last -- 显示每月登陆系统的用户信息。
kill -- 杀死一些特定的进程。（常用 kill -9 进程号 强制杀死进程）
logout -- 退出系统。
useradd/userdel -- 添加用户/删除用户。
clear -- 清屏。
passwd -- 设置用户密码。

</code></pre>
<h2 id="14vi编辑器">14.vi编辑器</h2>
<pre><code>首先用vi命令打开一个文件
末行模式命令：
:n,m w path/filename 保存指定范围文档（n表开始行，m表结束行）；
:q! 对文件做过修改后，强制退出；
:q 没有对文件做过修改退出；
:wq或x 保存退出；
dd 删除光标所在行；
:set number 显示行号；
:n 跳转到n行；
:s 替换字符串 :s/test/test2/g (把test替换为test2)  /g全局替换 /也可以用%代替
/ 查找字符串；

</code></pre>
<h2 id="15常用管线命令">15.常用管线命令</h2>
<pre><code>cut  -- 显示行中的指定部分，删除文件中指定字段
sort -- 排序。
wc -- 用于计算字数。
uniq -- 用于检查及删除文本文件中重复出现的行列，通常与sort一起使用。
tr -- 转换或删除文件中的字符。
split -- 用于将一个文件分割成数个。
xargs -- 给命令传递参数的一个过滤器,也是组合多个命令的一个工具。
awk  -- 文本分析工具。

</code></pre>
<h2 id="16网络通信常用的命令">16.网络通信常用的命令</h2>
<pre><code>arp -- 网络地址显示及控制。
ftp -- 文件传输。
lftp -- 文件传输。
ncftp ：文件传输。
mail -- 发送/接收电子邮件。
mesg -- 允许或拒绝其他用户向自己所用的终端发送信息。
mutt --  E-mail 管理程序。
netstat -- 显示网络连接、路由表和网络接口信息。
pine -- 收发电子邮件，浏览新闻组。
ping -- 用于查看网络是否连接通畅。
ssh -- 安全模式下远程登陆。
telnet -- 远程登录。
talk -- 与另一用户对话。
traceroute -- 显示到达某一主机所经由的路径及所使用的时间。
write -- 向其它用户终端写信息。
rlogin -- 远程登录。

</code></pre>
<h2 id="17安全相关命令">17.安全相关命令</h2>
<pre><code>last -- ast命令显示用户最近的登录信息，在尝试跟踪更改或其他活动时通常很有用。
who （或 w） -- 显示系统中有哪些用户在使用。
ss -- 允许您执行诸如显示监听端口和活动连接之类的操作。
history -- 查看历史执行命令记录。

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Markdown语法快速入门]]></title>
        <id>https://yanyecarr.github.io//post/markdown-yu-fa-kuai-su-ru-men</id>
        <link href="https://yanyecarr.github.io//post/markdown-yu-fa-kuai-su-ru-men">
        </link>
        <updated>2020-03-21T05:35:15.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1标题"><strong>1.标题</strong></h2>
<pre><code class="language-python"># 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
####### 七级标题
</code></pre>
<h1 id="一级标题">一级标题</h1>
<h2 id="二级标题">二级标题</h2>
<h3 id="三级标题">三级标题</h3>
<h4 id="四级标题">四级标题</h4>
<h5 id="五级标题">五级标题</h5>
<h6 id="六级标题">六级标题</h6>
<p>####### 七级标题？</p>
<p>快捷键 ctrl+1-5</p>
<h2 id="2-字体"><strong>2、字体</strong></h2>
<pre><code class="language-python">// 粗体 ctrl+b
**你好呀，颜先森**
// 斜体 ctrl+I
*我喜欢你* 
// 删除线 ctrl+shift+5
~此内容为废弃内容~
//下划线 ctrl+u
哈哈哈




</code></pre>
<p><strong>具体效果如下</strong></p>
<p>// 粗体 ctrl+b</p>
<p><strong>你好呀，颜先生</strong></p>
<p>// 斜体 ctrl+I
<em>我喜欢你</em>
// 删除线 ctrl+shift+5
~此内容为废弃内容~</p>
<p>//下划线 ctrl+u
<u>哈哈哈</u></p>
<h2 id="3-引用">3、引用</h2>
<pre><code class="language-python">//引用语法如下：
&gt;快捷键 ctrl+shift+q
&gt;&gt;颜颜颜
&gt;&gt;&gt;颜颜颜
</code></pre>
<p>//引用语法如下：</p>
<blockquote>
<p>快捷键 ctrl+shift+q</p>
<blockquote>
<p>颜颜颜</p>
<blockquote>
<p>颜颜颜</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="4-分割线">4、分割线</h2>
<pre><code class="language-python">//分割线（长度根据内容而定）
---
//分割线（站全屏）
***
</code></pre>
<p>//分割线（长度根据内容而定）</p>
<p>//分割线（站全屏）</p>
<hr>
<h2 id="5-图片">5、图片</h2>
<pre><code class="language-python">//图片插入 ctrl+shift+i
![图片名称](图片地址)
</code></pre>
<p><img src="https://yanyecarr.github.io//post-images/1584789233923.jpg" alt="头像">)</p>
<h2 id="6-超链接">6、超链接</h2>
<pre><code>//超链接 ctrl + k
[点击跳转到我的博客](https://yanyecarr.github.io/)
</code></pre>
<p>//超链接
<a href="https://yanyecarr.github.io/">点击跳转到我的博客</a></p>
<h2 id="7-列表">7、列表</h2>
<pre><code>//有序列表：序号+点+空格 生成列表 ctrl+shift+[
1. 首页
2. 分类
3. 标题
//无需列表：-+空格 ctrl+shift+]
</code></pre>
<p><strong>有序：</strong></p>
<ol>
<li>首页</li>
<li>分类</li>
<li>标题</li>
</ol>
<p><strong>无序：</strong></p>
<ul>
<li>首页</li>
</ul>
<h2 id="8-插入表格">8、插入表格</h2>
<pre><code class="language-python">//鼠标右键-&gt;插入-&gt;表格
ctrl+t
</code></pre>
<table>
<thead>
<tr>
<th>姓名</th>
<th>年龄</th>
<th>爱好</th>
</tr>
</thead>
<tbody>
<tr>
<td>蔡</td>
<td>24</td>
<td>唱，跳，rap</td>
</tr>
</tbody>
</table>
<h2 id="9-代码块">9、代码块</h2>
<pre><code class="language-python">//代码块 ctrl+shift+k
```python 数字键盘1前面的点
</code></pre>
<pre><code class="language-python">
</code></pre>
]]></content>
    </entry>
</feed>